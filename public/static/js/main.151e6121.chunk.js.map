{"version":3,"sources":["components/LinkButton.jsx","pages/landing/Landing.jsx","components/Map.jsx","components/TextStatistics.jsx","components/BarChart.jsx","components/PieChart.jsx","components/Sidebar.jsx","services/data-service.js","components/PreferenceForm.jsx","services/livability-service.js","components/MapContainer.jsx","pages/livability-results/LivabilityResults.jsx","pages/preferencePage/preferencePage.jsx","App.js","serviceWorker.js","index.js"],"names":["LinkButton","props","buttonText","route","text","action","render","history","type","onClick","load","push","pathname","state","Component","Landing","className","Map","id","React","TextStatistics","Card","Header","this","name","Body","Title","statistic","Text","description","BarChart","drawChart","bind","chartSelect","chartId","setEntries","entries","d3","data","console","log","Math","max","apply","map","x","value","dataMax","getDataMax","chartWidth","node","getBoundingClientRect","width","chartHeight","height","barWidth","length","tooltip","append","attr","bars","selectAll","exit","remove","enter","d","i","on","style","pageX","pageY","html","key","PieChart","radius","min","svg","color","domain","range","readyData","pie","innerRadius","outerRadius","Sidebar","income","households","transit","travelTimeToWork","transitMethod","housing","DataSvc","neighborhoodJSON","require","neighborhoods","Object","keys","toronto","shift","generalRanges","String","area","hood","police","policeStations","fire","fireStations","ambulance","ambulanceStations","totalUsers","reduce","sum","parseFloat","bicycle","car","carPassenger","other","publicTransit","walk","arr","filter","_getMaxMinValues","Number","parks","coverage","Owner","Renter","nbhd","n","children","population","elementary","schools","secondary","university","youthServices","childrenPop","culturalSpaces","languages","home","language","ethnicOrigins","ethnicOrigin","religion","placesOfWorship","incomeBrackets","discoverIncomeBrackets","houseOwners","employed","employment","Employed","householdIncome","individuals","individualIncome","getMinMaxForIncomes","fn","brackets","low","b","middle","high","getThresholds","r","split","threshold","replace","individual","household","individualRanges","householdRanges","individualBrackets","householdBrackets","forEach","neighborhoodID","filterBank","options","religions","ethnicities","includes","Array","from","Set","concat","ranges","bicycleParking","retirementHomes","values","PreferenceForm","questions","title","diversityQuestions","opened","allowDiversityPrefs","ethnicity","handleShow","handleSave","handleClose","handleSwitch","handleEthnicity","handleLanguage","handleReligion","diversityOptions","setState","diversityObj","onSetPreferences","questionNumber","newValues","slice","newValue","evt","target","checked","score","maxValue","minValue","onChange","handleChange","Form","Check","label","getDiversityOptions","opt","placeholder","isClearable","isSearchable","radioButtons","renderRadioButtons","diversitySwitch","renderSwitch","diversityButtons","renderDiversityButtons","Button","Modal","show","onHide","closeButton","Footer","variant","NbhdModel","rawData","scale","_calculateNormalizedScore","retrieveParksRange","retrieveWealthRanges","incomebrackets","household_lowIncomeScore","household_middleIncomeScore","household_highIncomeScore","individual_lowIncomeScore","individual_middleIncomeScore","individual_highIncomeScore","retrieveHousingRentRange","retrieveHousingOwnRange","retrieveFamilyLifeRanges","retrievePopulationRange","thisPopulation","GeneralAttrRanges","retrieveTransitRanges","retrieveCultureRanges","languageCount","ethnicOriginCount","religionCount","val","rangeObj","l","toLowerCase","_matchesReligion","groups","native","_matchesLanguage","langs","_matchesEthnicity","calculateParks","calculateWealth","calculateHousingRent","calculateHousingOwn","calculateFamilyLife","calculatePopulation","calculateServices","calculateTransit","calculateCulture","calculateDiversity","similarity","LivabilitySvc","userModel","diversity","limit","isArray","results","couldFilterByDiversity","nbhdVectors","includesReligion","includesEthnicity","includesLanguage","model","sort","a","MapContainer","setCurrentHood","getNewneighborhoods","userPreferences","bestneighborhoods","calculateLivability","currentHood","getNbhdById","newneighborhoodId","preferences","livability","Navbar","bg","Brand","Nav","Link","Container","fluid","Row","Col","sm","md","DropdownButton","Dropdown","Item","eventKey","onSelect","LivabilityResult","location","PreferencePage","App","exact","path","component","LivabilityResults","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.151e6121.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\n\n\nclass LinkButton extends Component {\n  buttonText = null;\n  route = null;\n\n  constructor(props) {\n    super(props);\n\n    this.buttonText = props.text;\n    this.route = props.route;\n    this.action = props.action;\n  }\n\n\n  render() {\n    return (<Route render={({ history }) => (\n      <button\n        type='button'\n        onClick={() => { \n          if (this.action) {\n            const load = this.action();\n            history.push({\n              pathname: this.route,\n              state: load\n            });\n          } else {\n            history.push(this.route);\n          }\n        }}\n      >\n        {this.buttonText}\n      </button>\n    )} />)\n  }\n}\n\nexport default LinkButton;","import React, { Component } from 'react';\nimport LinkButton from './../../components/LinkButton';\nimport './styles.scss';\n\n\nclass Landing extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <div className=\"landing-container\">\n        <div className=\"landing-header\">\n          <div className=\"landing-header-title\">TorontoLife</div>\n        </div>\n        <div className=\"landing-content\">\n          <div className=\"landing-content-body\">Use this tool to determine what Toronto neighborhoods are best for you</div>\n          <LinkButton route=\"/preferences\" text=\"Get Started\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing;","import React from 'react';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div id=\"map\">\n        <h2>Placeholder for map</h2>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass TextStatistics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>\n          <small>{this.props.name}</small>\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>{this.props.statistic}</Card.Title>\n          <Card.Text>{this.props.description}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default TextStatistics;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { Card } from 'react-bootstrap';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawChart = this.drawChart.bind(this);\n    this.chartSelect = '#' + this.props.chartId;\n    this.setEntries();\n  }\n\n  setEntries() {\n    this.entries = d3.entries(this.props.data);\n    console.log(this.entries);\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n    this.setEntries();\n  }\n\n  getDataMax() {\n    return Math.max.apply(Math, this.entries.map(x => x.value));\n  }\n\n  drawChart() {\n    const dataMax = this.getDataMax();\n\n    let chartWidth = d3.select(this.chartSelect).node().getBoundingClientRect().width;\n\t\tlet chartHeight = d3.select(this.chartSelect).node().getBoundingClientRect().height;\n    let barWidth = chartWidth / this.entries.length;\n\n    let tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"chart-tooltip\");\n\n    this.bars = d3.select(this.chartSelect).selectAll('g').data(this.entries);\n    this.bars.exit().remove();\n\n    this.bars\n      .enter().append('g')\n      .attr('transform', (d, i) => `translate(${i * barWidth},${chartHeight - d.value / dataMax * chartHeight })`)\n      .append('rect')\n      .attr('class', 'bar')\n      .attr('width', barWidth)\n      .attr('height', d => d.value / dataMax * chartHeight)\n      .on(\"mousemove\", d =>\n        tooltip\n          .style(\"left\", d3.event.pageX + \"px\")\n          .style(\"top\", d3.event.pageY - 50 + \"px\")\n          .style(\"display\", \"inline-block\")\n          .html(`<b>${d.key}</b> <br> ${d.value} people`)\n        )\n    \t.on(\"mouseout\", () => tooltip.style(\"display\", \"none\"));\n  }\n\n  render() {\n    // TODO: make width dynamic (responsive) later\n    return (\n      <Card>\n        <Card.Header>\n          <small>{this.props.name}</small>\n        </Card.Header>\n        <Card.Body>\n          <svg id={this.props.chartId} width=\"100%\" height=\"120px\" />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { Card } from 'react-bootstrap';\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawChart = this.drawChart.bind(this)\n    this.chartSelect = '#' + this.props.chartId;\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n  }\n\n  getDataMax() {\n    return Math.max.apply(Math, this.props.data.map(x => x.value));\n  }\n\n  drawChart() {\n\t\tlet chartWidth = d3.select(this.chartSelect).node().getBoundingClientRect().width;\n\t\tlet chartHeight = d3.select(this.chartSelect).node().getBoundingClientRect().height;\n\t\tlet radius = Math.min(chartWidth, chartHeight) / 2;\n\n\t\tlet tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"chart-tooltip\");\n\t\tlet svg = d3.select(this.chartSelect)\n\t\t  .append(\"svg\")\n\t\t  .attr(\"width\", chartWidth)\n\t\t  .attr(\"height\", chartHeight)\n\t\t  .append(\"g\")\n\t\t  .attr(\"transform\", \"translate(\" + chartWidth / 2 + \",\" + chartHeight / 2 + \")\");\n\n\t\tlet color = d3.scaleOrdinal()\n\t\t  .domain(this.props.data)\n\t\t  .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"]);\n\n\t\tlet pie = d3.pie().value(d => d.value);\n\t\tlet readyData = pie(d3.entries(this.props.data));\n\n\t\tsvg\n\t\t  .selectAll('slices')\n\t\t  .data(readyData)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(0)\n\t\t    .outerRadius(radius)\n\t\t  )\n\t\t  .attr('fill', d => color(d.data.key) )\n\t\t  .attr(\"stroke\", \"white\")\n\t\t\t.attr(\"class\", \"pie-slice\")\n      .on(\"mousemove\", d =>\n        tooltip\n          .style(\"left\", d3.event.pageX + \"px\")\n          .style(\"top\", d3.event.pageY - 50 + \"px\")\n          .style(\"display\", \"inline-block\")\n          .html(`<b>${d.data.key}</b> <br> ${d.value} people`)\n        )\n    \t.on(\"mouseout\", () => tooltip.style(\"display\", \"none\"));\n  }\n\n  render() {\n    // TODO: make width dynamic (responsive) later\n    return (\n      <Card>\n        <Card.Header>\n          <small>{this.props.name}</small>\n        </Card.Header>\n        <Card.Body>\n          <svg id={this.props.chartId} width=\"100%\" height=\"120px\" />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default PieChart;\n","import React from 'react';\nimport TextStatistics from './TextStatistics';\nimport BarChart from './BarChart';\nimport PieChart from './PieChart';\nimport { Tooltip } from 'react-bootstrap';\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <TextStatistics name={\"Median Age for \" + this.props.data.name} statistic=\"33.4 years\" description=\"top 9 percentile\" />\n        <BarChart name=\"Income by Household\" chartId=\"income-chart\"\n                  data={this.props.data.income.households} />\n        <BarChart name=\"Commute Time\" chartId=\"commute-time-chart\"\n                  data={this.props.data.transit.travelTimeToWork} />\n        <PieChart name=\"Commute Method\" chartId=\"commute-meth-chart\"\n                  data={this.props.data.transit.transitMethod} />\n        <PieChart name=\"Housing\" chartId=\"housing-chart\"\n                  data={this.props.data.housing} />\n      </>\n    );\n  }\n}\n\nexport default Sidebar;\n","/*\n\n  neighborhood Data Service\n\n*/\n\nclass DataService {\n  constructor() {\n    this.neighborhoodJSON = require('./../db/neighborhoods.json');\n    this.neighborhoods = Object.keys(this.neighborhoodJSON).map(x => this.neighborhoodJSON[x]);\n    this.toronto = this.neighborhoods.shift();\n    this.generalRanges = null;\n  }\n\n  get neighborhoodList() {\n    return this.neighborhoods.map(x => {\n      return {\n        name: x.name,\n        id: x.neighborhoodID,\n        area: x.area\n      }\n    });\n  }\n\n  get diversityOptions() {\n    const filterBank = [\n      'Language spoken most often at home for the total population excluding institutional residents',\n      'Official languages',\n      'Non-official languages',\n      'Non-Aboriginal languages',\n      'Multiple responses',\n      'English and non-official language',\n      'Semitic languages, n.i.e.'\n    ]\n\n    const options = {\n      languages: [],\n      religions: [],\n      ethnicities: []\n    }\n\n    this.neighborhoods.forEach(n => {\n      options.languages.push(Object.keys(n.languages.home).filter(language => !filterBank.includes(language)));\n      options.ethnicities.push(Object.keys(n.ethnicOrigin));\n      options.religions.push(Object.keys(n.placesOfWorship).filter(x => n.placesOfWorship[x] > 0));\n    });\n\n    options.languages = Array.from(new Set([].concat.apply([], options.languages)));\n    options.religions = Array.from(new Set([].concat.apply([], options.religions)));\n    options.ethnicities = Array.from(new Set([].concat.apply([], options.ethnicities)));\n    return options;\n  }\n\n  getNbhdById(id) {\n    id = typeof(id) != 'string' ? String(id) : id;\n    return this.neighborhoodJSON[id];\n  }\n\n  getNbhdName(id) {\n    id = typeof(id) != 'string' ? String(id) : id;\n    return this.neighborhoodJSON[id].name;\n  }\n\n  getNbhdArea(id) {\n    id = typeof(id) != 'string' ? String(id) : id;\n    return this.neighborhoodJSON[id].area;\n  }\n\n  getNbhdStations(id) {\n    id = typeof(id) != 'string' ? String(id) : id;\n    const hood = this.neighborhoodJSON[id];\n    return {\n      police: hood.policeStations,\n      fire: hood.fireStations,\n      ambulance: hood.ambulanceStations\n    }\n  }\n\n  getNbhdTransitMethodStats(id) {\n    id = typeof(id) != 'string' ? String(id) : id;\n    const hood = this.neighborhoodJSON[id].transit.transitMethod;\n    const totalUsers = Object.keys(hood).reduce((sum,key)=>sum+parseFloat(hood[key]||0),0);\n    return {\n      bicycle: (hood['Bicycle']/totalUsers) * 100 || null,\n      car: (hood['driver']/totalUsers) * 100 || null,\n      carPassenger: (hood['passenger']/totalUsers) * 100 || null,\n      other: (hood['Other method']/totalUsers) * 100 || null,\n      publicTransit: (hood['Public transit']/totalUsers) * 100 || null,\n      walk: (hood['Walked']/totalUsers) * 10 || null\n    }\n  }\n\n  _getMaxMinValues(arr) {\n    arr = arr.filter(x => x);\n    return {\n      max: Math.max(...arr),\n      min: Math.min(...arr)\n    }\n  }\n\n  get GeneralAttrRanges() {\n    if (this.generalRanges) {\n      return this.generalRanges;\n    }\n\n    const ranges = {\n      policeStations: null,\n      fireStations: null,\n      ambulanceStations: null,\n      bicycleParking: null,\n      retirementHomes: null,\n      culturalSpaces: null\n    }\n\n    Object.keys(ranges).forEach(attr => {\n      const values = this.neighborhoods.map(x => x[attr]);  \n      ranges[attr] = {\n        max: Math.max(...values),\n        min: Math.min(...values)\n      };\n    });\n\n    return ranges;\n  }\n\n  retrievePopulationRange() {\n    return this._getMaxMinValues(this.neighborhoods.map(x => Number(x['population']['Population, 2016'])))\n  }\n\n  // Get the park ranges according to coverage area\n  retrieveParksRange() {\n    return this._getMaxMinValues(this.neighborhoods.map(x => x.parks.coverage));\n  }\n\n  retrieveHousingOwnRange() {\n    return this._getMaxMinValues(this.neighborhoods.map(x => x.housing.Owner));\n  }\n\n  retrieveHousingRentRange() {\n    return this._getMaxMinValues(this.neighborhoods.map(x => x.housing.Renter));\n  }\n\n  retrieveFamilyLifeRanges() {\n    const nbhd = this.neighborhoods.map(n => {\n      return {\n        children: Number(n.population['Children (0-14 years)']),\n        elementary: n.schools.elementary,\n        secondary: n.schools.secondary,\n        university: n.schools.university,\n        youthServices: n.youthServices\n      }\n    });\n\n    return {\n      childrenPop: this._getMaxMinValues(nbhd.map(i => i.children)),\n      elementary: this._getMaxMinValues(nbhd.map(i => i.elementary)),\n      secondary: this._getMaxMinValues(nbhd.map(i => i.secondary)),\n      university: this._getMaxMinValues(nbhd.map(i => i.university)),\n      youthServices: this._getMaxMinValues(nbhd.map(i => i.youthServices)) \n    }\n  }\n\n  retrieveTransitRanges() {\n    return this._getMaxMinValues(this.neighborhoods.map(x => x.transit.transitMethod['Public transit']))\n  }\n\n  retrieveCultureRanges() {\n    const nbhd = this.neighborhoods.map(n => {\n      return {\n        culturalSpaces: n.culturalSpaces,\n        languages: Object.keys(n.languages.home).filter(language => language !== 'Language spoken most often at home for the total population excluding institutional residents' || language !== 'Official languages').length,\n        ethnicOrigins: Object.keys(n.ethnicOrigin).length,\n        religion: Object.keys(n.placesOfWorship).filter(x => n.placesOfWorship[x] > 0).length\n      }\n    });\n    \n    return {\n      culturalSpaces: this._getMaxMinValues(nbhd.map(i => i.culturalSpaces)),\n      languages: this._getMaxMinValues(nbhd.map(i => i.languages)),\n      ethnicOrigins: this._getMaxMinValues(nbhd.map(i => i.ethnicOrigins)),\n      religion: this._getMaxMinValues(nbhd.map(i => i.religion))\n    }\n  }\n\n\n  retrieveWealthRanges() {\n    const nbhd = this.neighborhoods.map(n => {\n      const incomeBrackets = this.discoverIncomeBrackets(n.income);\n      return {\n        houseOwners: n.housing.Owner,\n        employed: n.employment.Employed,\n        householdIncome: incomeBrackets.individuals,\n        individualIncome: incomeBrackets.households\n      }\n    });\n\n    function getMinMaxForIncomes(fn, brackets) {\n      return {\n        low: fn(brackets.map(b => b.low)),\n        middle: fn(brackets.map(b => b.middle)),\n        high: fn(brackets.map(b => b.high))\n      }    \n    }\n\n    return {\n      houseOwners: this._getMaxMinValues(nbhd.map(i => i.houseOwners)),\n      employed: this._getMaxMinValues(nbhd.map(i => i.employed)),\n      householdIncome: getMinMaxForIncomes(this._getMaxMinValues, nbhd.map(i => i.householdIncome)),\n      individualIncome: getMinMaxForIncomes(this._getMaxMinValues, nbhd.map(i => i.individualIncome))\n    }\n  }\n\n  // Seperate Income earners into upper class, middle class and lower class\n  // We may need to find income thresholds for high, middle, low\n  discoverIncomeBrackets(income) {\n    function getThresholds(i) {\n      return Object.keys(i).map(range => {\n        let r = range.split(' ');\n        r = r[0] === 'Under' ? '$0' : r[0];\n        r = Number(r.replace('$', '').replace(/,/g, ''));\n  \n        return {\n          key: range,\n          threshold: r\n        }\n      });\n    }\n\n    const individual = income.individuals;\n    const household = income.households;\n    const individualRanges = getThresholds(individual);\n    const householdRanges = getThresholds(household);\n\n    const individualBrackets = {\n      low: 0,\n      middle: 0,\n      high: 0\n    }\n\n    const householdBrackets = {\n      low: 0,\n      middle: 0,\n      high: 0\n    }\n\n    individualRanges.forEach(i => {\n      if (i.threshold < 30000) {\n        individualBrackets.low += individual[i.key];\n      } else if (i.threshold < 80000) {\n        individualBrackets.middle += individual[i.key];\n      } else {\n        individualBrackets.high += individual[i.key];\n      }\n    });\n\n    householdRanges.forEach(i => {\n      if (i.threshold < 60000) {\n        householdBrackets.low += household[i.key];\n      } else if (i.threshold < 150000) {\n        householdBrackets.middle += household[i.key];\n      } else {\n        householdBrackets.high += household[i.key];\n      }\n    });\n\n    return {\n      individuals: individualBrackets,\n      households: householdBrackets\n    }\n  }\n\n\n}\n\n\n// Create and export Data service\nconst DataSvc = new DataService();\nexport { DataSvc }","import React from 'react';\nimport InputRange from 'react-input-range';\nimport Select from 'react-select';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { DataSvc } from '../services/data-service';\nimport 'react-input-range/lib/css/index.css';\n\nclass PreferenceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n\t\t// Question text constants\n\t\tthis.questions = [\n\t\t\t{ title: 'Parks', description: 'importance of the presence of parks and natural spaces in a neighborhood' },\n\t\t\t{ title: 'Wealth', description: 'whether or not you prefer a high average income areas' },\n\t\t\t{ title: 'Housing - Renting', description: 'importance of renting a home' },\n\t\t\t{ title: 'Housing - Owning', description: 'importance of owning a home' },\n\t\t\t{ title: 'Family Life', description: 'importance of the presence of schools and youth services in a neighborhood' },\n\t\t\t{ title: 'Population', description: 'whether or not you enjoy living in highly populated areas' },\n\t\t\t{ title: 'Services', description: 'importance of the presence of police, fire and ambulance services in a neighborhood' },\n\t\t\t{ title: 'Transit', description: 'importance of public transit services in a neighborhood' },\n\t\t\t{ title: 'Culture', description: 'importance of the presence of cultural spaces in a neighborhood' },\n\t\t\t{ title: 'Diversity', description: 'whether or not you enjoy a neighborhood with very diverse residents in terms of religion, language and ethnicity' }\n\t\t];\n\n\t\tthis.diversityQuestions = [\n \t\t\t'Text for ethnicity question',\n \t\t\t'Text for language question',\n \t\t\t'Text for religion question'\n\t\t];\n\n\t\tthis.state = {\n\t\t\topened: false,\n\t\t\tvalues: this.questions.map(() => 5),\n\t\t\tallowDiversityPrefs: false,\n\t\t\tethnicity: null,\n\t\t\tlanguage: null,\n\t\t\treligion: null\n\t\t};\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n    this.handleEthnicity = this.handleEthnicity.bind(this);\n\t\tthis.handleLanguage = this.handleLanguage.bind(this);\n\t\tthis.handleReligion = this.handleReligion.bind(this);\n  }\n\n\tgetDiversityOptions() {\n\t\treturn DataSvc.diversityOptions;\n\t}\n\n\thandleShow() {\n\t\tthis.setState({ opened: true });\n\t}\n\n\thandleClose() {\n\t\tthis.setState({ opened: false });\n\t}\n\n\thandleSave() {\n\t\tlet diversityObj = {};\n\n\t\tif(this.state.allowDiversityPrefs) {\n\t\t\tdiversityObj.ethnicity = this.state.ethnicity ? this.state.ethnicity.value : null;\n\t\t\tdiversityObj.language = this.state.language ? this.state.language.value : null;\n\t\t\tdiversityObj.religion = this.state.religion ? this.state.religion.value : null;\n\t\t}\n\n\t\tthis.props.onSetPreferences(this.state.values, diversityObj);\n\t\tthis.setState({ opened: false });\n\t}\n\n\thandleChange(questionNumber, value) {\n\t\tlet newValues = this.state.values.slice();\n\t\tnewValues[questionNumber] = value;\n\t\tthis.setState({ values: newValues });\n\t}\n\n\thandleEthnicity(newValue){\n\t\tthis.setState({ ethnicity: newValue });\n\t}\n\n\thandleLanguage(newValue){\n\t\tthis.setState({ language: newValue });\n\t}\n\n\thandleReligion(newValue){\n\t\tthis.setState({ religion: newValue });\n\t}\n\n\thandleSwitch(evt) {\n\t\tthis.setState({ allowDiversityPrefs: evt.target.checked });\n\t}\n\n\trenderRadioButtons() {\n\t\tlet ranges = this.questions.map((score, i) =>\n\t\t\t<div key={i} className=\"question-group\">\n\t\t\t\t<b>{this.questions[i].title}</b>\n\t\t\t\t<p>{this.questions[i].description}</p>\n\t\t\t\t<InputRange\n\t\t\t\t\tmaxValue={10}\n\t\t\t\t\tminValue={1}\n\t\t\t\t\tvalue={this.state.values[i]}\n\t\t\t\t\tonChange={value => this.handleChange(i, value) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\treturn ranges;\n\t}\n\n\trenderSwitch() {\n\t\treturn (\n\t\t\t<div className='question-group'>\n\t\t\t\t<Form.Check\n\t\t    \ttype=\"switch\"\n\t\t    \tid=\"custom-switch\"\n\t\t    \tlabel=\"Filter diversity options\"\n\t\t\t\t\tchecked={this.state.allowDiversityPrefs}\n\t\t\t\t\tonChange={this.handleSwitch}\n\t\t  \t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderDiversityButtons() {\n\t\tif(!this.state.allowDiversityPrefs) return null;\n\n\t\tconst options = this.getDiversityOptions()\n\n\t\tconst ethnicities = options.ethnicities.map(opt => { return { label: opt , value: opt }});\n\t\tconst languages = options.languages.map(opt => { return { label: opt , value: opt }});\n\t\tconst religions = options.religions.map(opt => { return { label: opt , value: opt }});\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='ethnicity-question'\n\t\t\t\t\t\tplaceholder='Choose an ethnicity'\n\t\t\t\t\t\tvalue={this.state.ethnicity}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={ethnicities}\n\t\t\t\t\t\tonChange={this.handleEthnicity}\n\t        />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='language-question'\n\t\t\t\t\t\tplaceholder='Choose a language'\n\t\t\t\t\t\tvalue={this.state.language}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={languages}\n\t\t\t\t\t\tonChange={this.handleLanguage}\n\t        />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='religion-question'\n\t\t\t\t\t\tplaceholder='Choose a religion'\n\t\t\t\t\t\tvalue={this.state.religion}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={religions}\n\t\t\t\t\t\tonChange={this.handleReligion}\n\t        />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n  render() {\n\t\tconst radioButtons = this.renderRadioButtons();\n\t\tconst diversitySwitch = this.renderSwitch();\n\t\tconst diversityButtons = this.renderDiversityButtons();\n\n    return (\n\t\t\t<>\n\t\t\t\t<Button onClick={this.handleShow}>\n\t        Adjust Preferences\n\t      </Button>\n\n\t      <Modal show={this.state.opened} onHide={this.handleClose}>\n\t        <Modal.Header closeButton>\n\t          <Modal.Title>Preference Form</Modal.Title>\n\t        </Modal.Header>\n\t        <Modal.Body>\n\t\t\t\t\t\t{ radioButtons }\n\t\t\t\t\t\t{ diversitySwitch }\n\t\t\t\t\t\t{ diversityButtons }\n\t\t\t\t\t</Modal.Body>\n\t        <Modal.Footer>\n\t          <Button variant=\"secondary\" onClick={this.handleClose}>\n\t            Cancel\n\t          </Button>\n\t          <Button variant=\"primary\" onClick={this.handleSave}>\n\t            Save Changes\n\t          </Button>\n\t        </Modal.Footer>\n\t      </Modal>\n\t\t\t</>\n    );\n  }\n}\n\nexport default PreferenceForm;\n","/*\n\n  Livability Service\n\n*/\nimport { DataSvc } from './data-service';\n\nclass NbhdModel {\n  constructor(nbhd) {\n    this.rawData = nbhd;\n    this.scale = 100;\n  }\n\n  get name() {\n    return this.rawData.name;\n  }\n\n  get id() {\n    return this.rawData.neighborhoodID;\n  }\n\n  // Return a vector that we can use to calculate similarity\n  get model() {\n    return [\n      this.calculateParks() ,\n      this.calculateWealth(),\n      this.calculateHousingRent(),\n      this.calculateHousingOwn(),\n      this.calculateFamilyLife(),\n      this.calculatePopulation(),\n      this.calculateServices(),\n      this.calculateTransit(),\n      this.calculateCulture(),\n      this.calculateDiversity()\n    ];\n  }\n\n  calculateParks() {\n    return this._calculateNormalizedScore(this.rawData.parks.coverage, DataSvc.retrieveParksRange()) * this.scale;\n  }\n\n  calculateWealth() {\n    const {employed, houseOwners, householdIncome, individualIncome} = DataSvc.retrieveWealthRanges();\n    const incomebrackets = DataSvc.discoverIncomeBrackets(this.rawData.income);\n\n    // Calculate Household Income score\n    const household_lowIncomeScore = this._calculateNormalizedScore(incomebrackets.households.low, householdIncome.low);\n    const household_middleIncomeScore = this._calculateNormalizedScore(incomebrackets.households.middle, householdIncome.middle) * 2;\n    const household_highIncomeScore = this._calculateNormalizedScore(incomebrackets.households.high, householdIncome.high) * 4;\n\n    // Calculate Individual Income Score\n    const individual_lowIncomeScore = this._calculateNormalizedScore(incomebrackets.individuals.low, individualIncome.low);\n    const individual_middleIncomeScore = this._calculateNormalizedScore(incomebrackets.individuals.middle, individualIncome.middle) * 2;\n    const individual_highIncomeScore = this._calculateNormalizedScore(incomebrackets.individuals.high, individualIncome.high) * 4;\n\n    const employmentScore = this._calculateNormalizedScore(this.rawData.employment.Employed, employed);\n    const houseOwnerScore = this._calculateNormalizedScore(this.rawData.housing.Owner, houseOwners);\n    const householdScore = ((household_highIncomeScore + household_middleIncomeScore + household_lowIncomeScore)/7);\n    const individualScore = ((individual_highIncomeScore + individual_middleIncomeScore + individual_lowIncomeScore)/7);\n    return ((employmentScore + houseOwnerScore + householdScore + individualScore)/4) * this.scale;\n  }\n\n  calculateHousingRent() {\n    return this._calculateNormalizedScore(this.rawData.housing.Renter, DataSvc.retrieveHousingRentRange()) * this.scale;\n  }\n\n  calculateHousingOwn() {\n    return this._calculateNormalizedScore(this.rawData.housing.Owner, DataSvc.retrieveHousingOwnRange()) * this.scale;\n  }\n\n  calculateFamilyLife() {\n    const {childrenPop, elementary, secondary, university, youthServices} = DataSvc.retrieveFamilyLifeRanges();\n    const childrenScore = this._calculateNormalizedScore(Number(this.rawData.population['Children (0-14 years)']), childrenPop);\n    const elementaryScore = this._calculateNormalizedScore(this.rawData.schools.elementary, elementary);\n    const secondaryScore = this._calculateNormalizedScore(this.rawData.schools.secondary, secondary);\n    const universityScore = this._calculateNormalizedScore(this.rawData.schools.university, university);\n    const youthScore = this._calculateNormalizedScore(this.rawData.youthServices, youthServices);\n    return ((childrenScore + elementaryScore + secondaryScore + universityScore + youthScore)/5) * this.scale;\n  }\n\n  calculatePopulation() {\n    const range = DataSvc.retrievePopulationRange();\n    const thisPopulation = this.rawData.population['Population, 2016'];\n    return this._calculateNormalizedScore(thisPopulation, range) * this.scale;\n  }\n\n  calculateServices() {\n    const {fireStations, ambulanceStations, policeStations } = DataSvc.GeneralAttrRanges;\n    const fireScore = this._calculateNormalizedScore(this.rawData.fireStations, fireStations);\n    const policeScore = this._calculateNormalizedScore(this.rawData.policeStations, policeStations);\n    const ambulanceScore = this._calculateNormalizedScore(this.rawData.ambulanceStations, ambulanceStations);\n    return ((fireScore + policeScore + ambulanceScore)/3) * this.scale;\n  }\n\n  calculateTransit() {\n    return this._calculateNormalizedScore(this.rawData.transit.transitMethod['Public transit'], DataSvc.retrieveTransitRanges()) * this.scale;\n  }\n\n  calculateCulture() {\n    const {languages, culturalSpaces, ethnicOrigins} = DataSvc.retrieveCultureRanges();\n\n    const languageCount = Object.keys(this.rawData.languages.home).filter(language => language !== 'Language spoken most often at home for the total population excluding institutional residents' || language !== 'Official languages').length;\n    const ethnicOriginCount = Object.keys(this.rawData.ethnicOrigin).length;\n\n    const languageScore = this._calculateNormalizedScore(languageCount, languages);\n    const ethnicScore = this._calculateNormalizedScore(ethnicOriginCount, ethnicOrigins);\n    const cultureSpaceScore = this._calculateNormalizedScore(this.rawData.culturalSpaces, culturalSpaces);\n\n    return ((languageScore + ethnicScore + cultureSpaceScore)/3) * this.scale;\n  }\n\n  calculateDiversity() {\n    const {languages, ethnicOrigins, religion} = DataSvc.retrieveCultureRanges();\n\n    const languageCount = Object.keys(this.rawData.languages.home).filter(language => language !== 'Language spoken most often at home for the total population excluding institutional residents' || language !== 'Official languages').length;\n    const ethnicOriginCount = Object.keys(this.rawData.ethnicOrigin).length;\n    const religionCount = Object.keys(this.rawData.placesOfWorship).filter(x => this.rawData.placesOfWorship[x] > 0).length;\n\n    const languageScore = this._calculateNormalizedScore(languageCount, languages);\n    const ethnicScore = this._calculateNormalizedScore(ethnicOriginCount, ethnicOrigins);\n    const religionScore = this._calculateNormalizedScore(religionCount, religion);\n\n    return ((languageScore + ethnicScore + religionScore)/3) * this.scale;\n  }\n\n  // Calculate normalized score\n  _calculateNormalizedScore(val, rangeObj) {\n    if (!val) {\n      return 0;\n    }\n    return (val - rangeObj.min)/(rangeObj.max - rangeObj.min);\n  }\n\n  // Check that neighborhood has relgion\n  _matchesReligion(religion) {\n    return Object.keys(this.rawData.placesOfWorship).filter(r => this.rawData.placesOfWorship[r] !== 0).map(l => l.toLowerCase()).includes(religion.toLowerCase());\n  }\n\n  // Check that religion is most dominant in neighborhood\n  isDominantReligion(religion) {\n    if (!this._matchesReligion(religion)) {\n      return false;\n    }\n    const groups = this.rawData.placesOfWorship;\n    const values = Object.values(groups);\n    const max = Math.max(...values);\n    return Object.keys(groups).filter(x => groups[x] === max).includes(religion);\n  }\n\n  includesReligion(religion) {\n    return Object.keys(this.rawData.placesOfWorship).filter(x => this.rawData.placesOfWorship[x] > 0).map(x => x.toLowerCase()).includes(religion.toLowerCase());\n  }\n\n\n  // Check that the requested language matches the requested language\n  _matchesLanguage(language) {\n    return Object.keys(this.rawData.languages.native).map(l => l.toLowerCase()).includes(language.toLowerCase());\n  }\n\n  // Check if the language is the most dominant or one of the most dominant languages in the neighbourhhod\n  isDominantLanguage(language) {\n    if (!this._matchesLanguage(language)) {\n      return false;\n    }\n    const langs = this.rawData.languages.native;\n\n    // Remove the general attributes\n    langs['Single responses'] = 0;\n    langs['Official languages'] = 0;\n    langs['Non-Aboriginal languages'] = 0;\n    langs['Non-official languages'] = 0;\n\n    const values = Object.values(langs);\n    const max = Math.max(...values);\n\n    return Object.keys(langs).filter(x => langs[x] === max).map(x => x.toLowerCase()).includes(language.toLowerCase());\n  }\n\n  includesLanguage(language) {\n    return Object.keys(this.rawData.languages.native).map(x => x.toLowerCase()).includes(language.toLowerCase());\n  }\n\n  // Check if the neighborhood has the requested ethnicity\n  _matchesEthnicity(ethnicity) {\n    return Object.keys(this.rawData.ethnicOrigin).map(l => l.toLowerCase()).includes(ethnicity.toLowerCase());\n  }\n\n  // Check that ethnicity is the most dominant in neighborhood\n  isDominantEthnicity(ethnicity) {\n    if (!this._matchesEthnicity(ethnicity)) {\n      return false;\n    }\n    const groups = this.rawData.ethnicOrigin;\n    const values = Object.values(groups);\n    const max = Math.max(...values);\n    return Object.keys(groups).filter(x => groups[x] === max).includes(ethnicity);\n  }\n\n  includesEthnicity(ethnicity) {\n    return Object.keys(this.rawData.ethnicOrigin).filter(x => this.rawData.ethnicOrigin[x] > 0).map(x => x.toLowerCase()).includes(ethnicity.toLowerCase());\n  }\n}\n\nconst similarity = require('compute-cosine-similarity');\nclass LivabilityService {\n  constructor() {\n    this.neighborhoods = DataSvc.neighborhoods.map(n => new NbhdModel(n));\n  }\n\n  /**\n   * Calculate Livability\n   *\n   * Calculate the livability scores for each neighborhood in toronto compared to the user input.\n   *\n   * @param {Array<Number>} userModel An array of 10 Numbers which represent the user's preferences. [parks, wealth, house renters, house owners, family life, population, services, transit, culture, diversity ]\n   * @param {{religion: string, ethnicity: string, language: string}} diversity Filter neighborhoods by specific characteristics\n   * @param limit Specify the number of elements to return, if you want all enter 0\n  */\n  calculateLivability(userModel, diversity = null, limit = 5) {\n    if (!Array.isArray(userModel) || !userModel.length === 10 || (Math.max(...userModel) > 10) || (Math.min(...userModel) < 0)) {\n      return;\n    }\n\n    let results = {\n      couldFilterByDiversity: true,\n      neighborhoods: null\n    };\n\n    // Convert to NbhdModel scale: 100\n    userModel = userModel.map(val => val*10);\n    let nbhdVectors = diversity ? this.neighborhoods.filter(n => {\n      let religion = true;\n      let ethnicity = true;\n      let language = true;\n\n      if (diversity.religion) {\n        religion = n.includesReligion(diversity.religion);\n      }\n\n      if (diversity.ethnicity) {\n        ethnicity = n.includesEthnicity(diversity.ethnicity);\n      }\n\n      if (diversity.language) {\n        language = n.includesLanguage(diversity.language);\n      }\n\n      return religion && ethnicity && language;\n\n    }).map(n => {\n      return {\n        id: n.id,\n        name: n.name,\n        similarity: similarity(userModel, n.model)\n      }\n    }) : this.neighborhoods.map(n => {\n      return {\n        id: n.id,\n        name: n.name,\n        similarity: similarity(userModel, n.model)\n      }\n    });\n\n    // If Diversity is requested and there are no avaliable neighborhoods set to the original neighborhoods without filter\n    if (diversity && nbhdVectors.length === 0) {\n      results.couldFilterByDiversity = false;\n      nbhdVectors = this.neighborhoods.map(n => {\n        return {\n          id: n.id,\n          name: n.name,\n          similarity: similarity(userModel, n.model)\n        }\n      });\n    }\n\n\n    // Limit the results\n    if (limit === 0 || limit >= 140 || limit < 0 || typeof limit !== 'number') {\n      return {\n        couldFilterByDiversity: results.couldFilterByDiversity,\n        neighborhoods: nbhdVectors.sort((a,b) => b.similarity-a.similarity)\n      };\n    }\n    return {\n      couldFilterByDiversity: results.couldFilterByDiversity,\n      neighborhoods: nbhdVectors.sort((a,b) => b.similarity-a.similarity).slice(0, limit)\n    };\n\n  }\n}\n\nconst LivabilitySvc = new LivabilityService();\n\nexport { LivabilitySvc };\n","import React from 'react';\nimport Map from './Map';\nimport Sidebar from './Sidebar';\nimport PreferenceForm from './PreferenceForm';\nimport { Container, Row, Col, Navbar, Nav, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { DataSvc } from '../services/data-service';\nimport { LivabilitySvc } from '../services/livability-service';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCurrentHood = this.setCurrentHood.bind(this);\n    this.getNewneighborhoods = this.getNewneighborhoods.bind(this);\n\n    const {values, diversity} = this.props.userPreferences;\n    let bestneighborhoods = LivabilitySvc.calculateLivability(values, diversity);\n\n    this.state = {\n      currentHood: DataSvc.getNbhdById(bestneighborhoods.neighborhoods[0].id),\n      bestneighborhoods: bestneighborhoods.neighborhoods\n    };\n  }\n\n  setCurrentHood(newneighborhoodId) {\n    this.setState ({\n      currentHood: DataSvc.getNbhdById(newneighborhoodId)\n    });\n  }\n\n  getNewneighborhoods(preferences, diversity) {\n    let livability = LivabilitySvc.calculateLivability(preferences, diversity);\n    this.setCurrentHood(livability.neighborhoods[0].id);\n    this.setState({ bestneighborhoods: livability.neighborhoods });\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar bg=\"light\" variant=\"light\">\n          <Navbar.Brand>TorontoLife</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link>Home</Nav.Link>\n            <Nav.Link>About Us</Nav.Link>\n          </Nav>\n        </Navbar>\n\n        <Container fluid>\n          <Row>\n            <Col sm={6} md={9}>\n              <Map />\n            </Col>\n            <Col sm={6} md={3} className=\"sidebar\">\n              <PreferenceForm onSetPreferences={this.getNewneighborhoods} diversityOptions={this.diversityOptions} />\n              <span>Statistics for:</span>\n              <DropdownButton id=\"dropdown-basic-button\" title={this.state.currentHood.name}>\n                {this.state.bestneighborhoods.map((hood, i) =>\n                  <Dropdown.Item key={i} eventKey={hood.id} onSelect={this.setCurrentHood}>{i+1 + ' - ' + hood.name}</Dropdown.Item>\n                )}\n              </DropdownButton>\n              <Sidebar data={this.state.currentHood} />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default MapContainer;\n","import React from 'react'\nimport './styles.css';\nimport MapContainer from '../../components/MapContainer';\n\nclass LivabilityResult extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.preferences = this.props.location.state;\n  }\n\n  render() {\n    const { preferences } = this;\n  \n    return (\n      <div className=\"App\">\n        <MapContainer userPreferences={preferences} />\n      </div>\n    );\n  } \n}\n\nexport default LivabilityResult;\n\n\n","import React, { Component } from 'react';\nimport LinkButton from '../../components/LinkButton';\nimport InputRange from 'react-input-range';\nimport Select from 'react-select';\nimport { Modal } from 'react-bootstrap';\nimport { DataSvc } from '../../services/data-service';\nimport 'react-input-range/lib/css/index.css';\nimport './styles.scss';\n\nclass PreferencePage extends Component {\n  constructor(props) {\n    super(props);\n\n\t\t// Question text constants\n\t\tthis.questions = [\n\t\t\t{ title: 'Parks', description: 'importance of the presence of parks and natural spaces in a neighborhood' },\n\t\t\t{ title: 'Wealth', description: 'whether or not you prefer a high average income areas' },\n\t\t\t{ title: 'Housing - Renting', description: 'importance of renting a home' },\n\t\t\t{ title: 'Housing - Owning', description: 'importance of owning a home' },\n\t\t\t{ title: 'Family Life', description: 'importance of the presence of schools and youth services in a neighborhood' },\n\t\t\t{ title: 'Population', description: 'whether or not you enjoy living in highly populated areas' },\n\t\t\t{ title: 'Services', description: 'importance of the presence of police, fire and ambulance services in a neighborhood' },\n\t\t\t{ title: 'Transit', description: 'importance of public transit services in a neighborhood' },\n\t\t\t{ title: 'Culture', description: 'importance of the presence of cultural spaces in a neighborhood' },\n\t\t\t{ title: 'Diversity', description: 'whether or not you enjoy a neighborhood with very diverse residents in terms of religion, language and ethnicity' }\n\t\t];\n\n\t\tthis.diversityQuestions = [\n \t\t\t'Text for ethnicity question',\n \t\t\t'Text for language question',\n \t\t\t'Text for religion question'\n\t\t];\n\n\t\tthis.state = {\n\t\t\topened: true,\n\t\t\tvalues: this.questions.map(() => 5),\n\t\t\tallowDiversityPrefs: false,\n\t\t\tethnicity: null,\n\t\t\tlanguage: null,\n\t\t\treligion: null\n\t\t};\n\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEthnicity = this.handleEthnicity.bind(this);\n\t\tthis.handleLanguage = this.handleLanguage.bind(this);\n\t\tthis.handleReligion = this.handleReligion.bind(this);\n  }\n\n\tgetDiversityOptions() {\n\t\treturn DataSvc.diversityOptions;\n\t}\n\n\thandleSave() {\n\t\tlet diversityObj = {};\n\n\t\tif(this.state.allowDiversityPrefs) {\n\t\t\tdiversityObj.ethnicity = this.state.ethnicity ? this.state.ethnicity.value : null;\n\t\t\tdiversityObj.language = this.state.language ? this.state.language.value : null;\n\t\t\tdiversityObj.religion = this.state.religion ? this.state.religion.value : null;\n\t\t}\n\n    return {\n      values: this.state.values,\n      diversity: {\n        ethnicity: this.state.ethnicity,\n        religion: this.state.religion,\n        language: this.state.language\n      }\n    }\n\t}\n\n\thandleChange(questionNumber, value) {\n\t\tlet newValues = this.state.values.slice();\n    newValues[questionNumber] = value;\n    \n    if (questionNumber === newValues.length - 1) {\n      if (value < 5) {\n        this.setState({ allowDiversityPrefs: true })\n      } else {\n        this.setState({ allowDiversityPrefs: false })\n      }\n    }\n\n\t\tthis.setState({ values: newValues });\n\t}\n\n\thandleEthnicity(newValue){\n\t\tthis.setState({ ethnicity: newValue });\n\t}\n\n\thandleLanguage(newValue){\n\t\tthis.setState({ language: newValue });\n\t}\n\n\thandleReligion(newValue){\n\t\tthis.setState({ religion: newValue });\n\t}\n\n\n\trenderRadioButtons() {\n\t\tlet ranges = this.questions.map((score, i) =>\n\t\t\t<div key={i} className=\"question-group\">\n\t\t\t\t<b>{this.questions[i].title}</b>\n\t\t\t\t<p>{this.questions[i].description}</p>\n\t\t\t\t<InputRange\n\t\t\t\t\tmaxValue={10}\n\t\t\t\t\tminValue={1}\n\t\t\t\t\tvalue={this.state.values[i]}\n\t\t\t\t\tonChange={value => this.handleChange(i, value) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\t\treturn ranges;\n\t}\n\n\trenderDiversityButtons() {\n\t\tif(!this.state.allowDiversityPrefs) return null;\n\n\t\tconst options = this.getDiversityOptions()\n\n\t\tconst ethnicities = options.ethnicities.map(opt => { return { label: opt , value: opt }});\n\t\tconst languages = options.languages.map(opt => { return { label: opt , value: opt }});\n\t\tconst religions = options.religions.map(opt => { return { label: opt , value: opt }});\n\n\t\treturn (\n\t\t\t<>\n        <div className=\"diversity-header\">\n          <div className=\"diversity-header-title\">Diversity Options</div>\n          <div className=\"diversity-header-subtitle\">We noticed you don't want a lot of diversity, use the following fields to tell us a little bit about what you're looking for</div>\n        </div>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='ethnicity-question'\n\t\t\t\t\t\tplaceholder='Choose an ethnicity'\n\t\t\t\t\t\tvalue={this.state.ethnicity}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={ethnicities}\n\t\t\t\t\t\tonChange={this.handleEthnicity}\n\t        />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='language-question'\n\t\t\t\t\t\tplaceholder='Choose a language'\n\t\t\t\t\t\tvalue={this.state.language}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={languages}\n\t\t\t\t\t\tonChange={this.handleLanguage}\n\t        />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-group\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid='religion-question'\n\t\t\t\t\t\tplaceholder='Choose a religion'\n\t\t\t\t\t\tvalue={this.state.religion}\n\t          isClearable={true}\n\t\t\t\t\t\tisSearchable={true}\n\t          options={religions}\n\t\t\t\t\t\tonChange={this.handleReligion}\n\t        />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n  render() {\n\t\tconst radioButtons = this.renderRadioButtons();\n\t\tconst diversityButtons = this.renderDiversityButtons();\n\n    return (\n      <div className=\"preferencePage-container\">\n        <div className=\"preferencePage-header\">\n          <Modal.Title>Preference Form</Modal.Title>\n          <div className=\"subtitle\">Use this form to describe what you're looking for</div>\n        </div>\n        <div className=\"preferencePage-body\">\n          { radioButtons }\n          { diversityButtons }\n        </div>\n        <div className=\"preferencePage-actions\">\n          <LinkButton route=\"/\" text=\"Cancel\" />\n          <LinkButton route=\"/results\" text=\"Save Changes\" action={this.handleSave} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreferencePage;","import React from 'react'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Landing from './pages/landing/Landing';\nimport LivabilityResults from './pages/livability-results/LivabilityResults';\nimport PreferencePage from './pages/preferencePage/preferencePage';\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <Router>\n    <div>\n      <Route exact path=\"/\" component={Landing} />\n      <Route exact path=\"/preferences\" component={PreferencePage} />\n      <Route exact path=\"/results\" component={LivabilityResults} />\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}